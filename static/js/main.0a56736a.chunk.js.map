{"version":3,"sources":["fbase.js","components/AuthForm.js","components/AuthSnsForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","AuthSnsForm","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faGoogle","faGithub","Auth","faTwitter","color","size","style","marginBottom","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","NweetTextRef","doc","id","onDeleteClick","window","confirm","deleteDoc","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","createdAt","serverTimestamp","creatorId","addDoc","collection","docRef","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","q","query","orderBy","onSnapshot","snapshot","nweetArr","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","currentUser","autoFocus","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","Date","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a56736a.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nexport const authService = getAuth(firebaseApp);\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value }\r\n        } = event;\r\n\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        }else if(name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await createUserWithEmailAndPassword(\r\n                    authService,\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                data = await signInWithEmailAndPassword(\r\n                    authService,\r\n                    email, \r\n                    password\r\n                );\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            //console.log(error.message);\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev)\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                { newAccount ? \"Sign In\" : \"Create Account\" }\r\n            </span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { GoogleAuthProvider, GithubAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst AuthSnsForm = () => {\r\n\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name }\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new GoogleAuthProvider();\r\n        }else if(name === \"github\"){\r\n            provider = new GithubAuthProvider();\r\n        }\r\n        const data = await signInWithPopup(authService, provider);\r\n    }    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthSnsForm;","import React, { useEffect, useState } from \"react\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport AuthSnsForm from \"components/AuthSnsForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n  } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <AuthSnsForm />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { doc, deleteDoc, updateDoc }from\"firebase/firestore\";\r\nimport { deleteObject, ref } from \"@firebase/storage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const NweetTextRef =doc(dbService, \"nweets\", `${nweetObj.id}`);\r\n\r\n    const onDeleteClick = async () => {\r\n      const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n      if (ok) {\r\n        await deleteDoc(NweetTextRef);\r\n        if(nweetObj.attachmentUrl){\r\n          await deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n        }\r\n      }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n      event.preventDefault();\r\n      await updateDoc(NweetTextRef, {\r\n        text: newNweet,\r\n      });\r\n      setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n      const {\r\n        target: { value },\r\n      } = event;\r\n      setNewNweet(value);\r\n    };\r\n    return (\r\n      <div className=\"nweet\">\r\n        {editing ? (\r\n          <>\r\n            <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Edit your nweet\"\r\n                value={newNweet}\r\n                required\r\n                onChange={onChange}\r\n                className=\"formInput\"\r\n              />\r\n              <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n            </form>\r\n            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n              Cancel\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h4>{nweetObj.text}</h4>\r\n            {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n            {isOwner && (\r\n              <div class=\"nweet__actions\">\r\n                <span onClick={onDeleteClick}>\r\n                  <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                  <FontAwesomeIcon icon={faPencilAlt} />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Nweet;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { collection, addDoc, serverTimestamp } from \"firebase/firestore\";\r\nimport { ref, uploadString, getDownloadURL } from \"@firebase/storage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n            const response = await uploadString(attachmentRef, attachment, \"data_url\");\r\n            attachmentUrl = await getDownloadURL(response.ref);\r\n        }        \r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: serverTimestamp(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        }\r\n        try {\r\n            const docRef = await addDoc(collection(dbService, \"nweets\"), nweetObj);\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n        } catch (error) {\r\n            console.error(\"Error adding document: \", error);\r\n        }        \r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"factoryForm\">\r\n                <div className=\"factoryInput__container\">\r\n                    <input\r\n                        value={nweet}\r\n                        onChange={onChange}\r\n                        type=\"text\"\r\n                        placeholder=\"What's on your mind?\"\r\n                        maxLength={120}\r\n                        className=\"factoryInput__input\"\r\n                    />\r\n                    <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n                </div>\r\n                <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                    <span>Add photos</span>\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                </label>\r\n                <input \r\n                    id=\"attach-file\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={onFileChange}\r\n                    style={{\r\n                    opacity: 0,\r\n                    }}\r\n                 />\r\n                {attachment && (\r\n                    <div className=\"factoryForm__attachment\">\r\n                        <img\r\n                            src={attachment}\r\n                            style={{\r\n                                backgroundImage: attachment,\r\n                            }}\r\n                        />\r\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                            <FontAwesomeIcon icon={faTimes} />\r\n                        </div>\r\n                    </div>\r\n                )}                \r\n            </form>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport { collection, onSnapshot, query, orderBy } from \"firebase/firestore\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(dbService, \"nweets\"),\r\n            orderBy(\"createdAt\", \"desc\")\r\n        );\r\n        onSnapshot(q, (snapshot) => {\r\n            const nweetArr = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArr);\r\n        });\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                <Nweet\r\n                    key={nweet.id}\r\n                    nweetObj={nweet}\r\n                    isOwner={nweet.creatorId === userObj.uid}\r\n                />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      //await updateProfile(userObj, { displayName: newDisplayName });\r\n      await updateProfile(authService.currentUser, { displayName: newDisplayName });\r\n    }\r\n    refreshUser();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <Link to=\"/\" style={{ marginRight: 10 }}>\r\n        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n      </Link>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;","import React, { useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {\r\n                    isLoggedIn ? (\r\n                        <div\r\n                            style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            }}\r\n                        >\r\n                            <Route exact path=\"/\">\r\n                                <Home userObj={userObj} />\r\n                            </Route>\r\n                            <Route exact path=\"/profile\">\r\n                                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                            </Route>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <Route exact path=\"/\">\r\n                                <Auth />\r\n                            </Route>\r\n                        </>   \r\n                    )\r\n                }\r\n            </Switch>            \r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\n\nfunction App() {\n  const [init, setInit] = useState(false);  \n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        //setUserObj(user);\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,          \n        });\n      }else{\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    setUserObj({\n      uid: authService.currentUser.uid,\n      displayName: authService.currentUser.displayName\n    })\n  }\n\n  return (\n    <>\n      { init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} /> : \"Initializing....\" }\n      <footer>&copy; { new Date().getFullYear() } Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}